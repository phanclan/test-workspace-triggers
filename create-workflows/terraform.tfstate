{
  "version": 4,
  "terraform_version": "0.14.0",
  "serial": 10,
  "lineage": "c9ac1841-360b-1f0f-bdc6-4bd8f2a1ad61",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "local_file",
      "name": "dynamic",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": "root",
          "schema_version": 0,
          "attributes": {
            "content": "on:\n  push:\n    branches:\n      - main\n    paths:\n      - '*'\n  pull_request:\n    paths:\n      - '*'\n\ndefaults:\n  run:\n    shell: bash\n\njobs:\n  hello_world_job:\n    runs-on: ubuntu-latest\n    name: Terraform Plan Apply\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n      - name: Install and Setup Terraform\n        uses: hashicorp/setup-terraform@v1\n        with:\n          terraform_version: 0.14.0\n          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n      - name: Terraform Format Init Validate\n        id: foo\n        uses: ./.github/actions/terraform-workflow # actions/hello-world-composite-run-steps-action@v1\n#        uses: actions/hello-world-composite-run-steps-action@v1\n        with:\n          working-directory: '.'\n          who-to-greet: 'Mona the Octocats'\n      - run: echo random-number ${{ steps.foo.outputs.random-number }}\n      - name: Terraform Plan\n        id: plan\n        if: github.event_name == 'pull_request'\n        run: terraform plan -no-color -input=false\n        working-directory: '.'\n        continue-on-error: true\n      - uses: actions/github-script@0.9.0\n        if: github.event_name == 'pull_request'\n        env:\n          PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          script: |\n            const output = `#### Terraform Format and Style üñå\\`${{ steps.fmt.outcome }}\\`\n            #### Terraform Initialization ‚öôÔ∏è\\`${{ steps.init.outcome }}\\`\n            #### Terraform Validation ü§ñ\\`${{ steps.validate.outcome }}\\`\n            #### Terraform Plan üìñ\\`${{ steps.plan.outcome }}\\`\n\n            \u003cdetails\u003e\u003csummary\u003eShow Plan\u003c/summary\u003e\n\n            \\`\\`\\`\\n\n            ${process.env.PLAN}\n            \\`\\`\\`\n\n            \u003c/details\u003e\n\n            *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n            github.issues.createComment({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              body: output\n            })\n      - name: Terraform Plan Status\n        if: steps.plan.outcome == 'failure'\n        run: exit 1\n      - name: Terraform Apply\n        if: github.ref == 'refs/heads/main' \u0026\u0026 github.event_name == 'push'\n        run: terraform apply -auto-approve -input=false\n        working-directory: '.'\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../.github/workflows/root.yml",
            "id": "328573267f17d6089ffd99efe59f15a509b652b2",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "sub-1",
          "schema_version": 0,
          "attributes": {
            "content": "on:\n  push:\n    branches:\n      - main\n    paths:\n      - 'sub-1/*'\n  pull_request:\n    paths:\n      - 'sub-1/*'\n\ndefaults:\n  run:\n    shell: bash\n\njobs:\n  hello_world_job:\n    runs-on: ubuntu-latest\n    name: Terraform Plan Apply\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n      - name: Install and Setup Terraform\n        uses: hashicorp/setup-terraform@v1\n        with:\n          terraform_version: 0.14.0\n          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n      - name: Terraform Format Init Validate\n        id: foo\n        uses: ./.github/actions/terraform-workflow # actions/hello-world-composite-run-steps-action@v1\n#        uses: actions/hello-world-composite-run-steps-action@v1\n        with:\n          working-directory: 'sub-1'\n          who-to-greet: 'Mona the Octocats'\n      - run: echo random-number ${{ steps.foo.outputs.random-number }}\n      - name: Terraform Plan\n        id: plan\n        if: github.event_name == 'pull_request'\n        run: terraform plan -no-color -input=false\n        working-directory: 'sub-1'\n        continue-on-error: true\n      - uses: actions/github-script@0.9.0\n        if: github.event_name == 'pull_request'\n        env:\n          PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          script: |\n            const output = `#### Terraform Format and Style üñå\\`${{ steps.fmt.outcome }}\\`\n            #### Terraform Initialization ‚öôÔ∏è\\`${{ steps.init.outcome }}\\`\n            #### Terraform Validation ü§ñ\\`${{ steps.validate.outcome }}\\`\n            #### Terraform Plan üìñ\\`${{ steps.plan.outcome }}\\`\n\n            \u003cdetails\u003e\u003csummary\u003eShow Plan\u003c/summary\u003e\n\n            \\`\\`\\`\\n\n            ${process.env.PLAN}\n            \\`\\`\\`\n\n            \u003c/details\u003e\n\n            *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n            github.issues.createComment({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              body: output\n            })\n      - name: Terraform Plan Status\n        if: steps.plan.outcome == 'failure'\n        run: exit 1\n      - name: Terraform Apply\n        if: github.ref == 'refs/heads/main' \u0026\u0026 github.event_name == 'push'\n        run: terraform apply -auto-approve -input=false\n        working-directory: 'sub-1'\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../.github/workflows/sub-1.yml",
            "id": "ef9f48ca41b55147669b32c29aff2508039664f4",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "sub-2a",
          "schema_version": 0,
          "attributes": {
            "content": "on:\n  push:\n    branches:\n      - main\n    paths:\n      - 'sub-1/sub-2a/*'\n  pull_request:\n    paths:\n      - 'sub-1/sub-2a/*'\n\ndefaults:\n  run:\n    shell: bash\n\njobs:\n  hello_world_job:\n    runs-on: ubuntu-latest\n    name: Terraform Plan Apply\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n      - name: Install and Setup Terraform\n        uses: hashicorp/setup-terraform@v1\n        with:\n          terraform_version: 0.14.0\n          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n      - name: Terraform Format Init Validate\n        id: foo\n        uses: ./.github/actions/terraform-workflow # actions/hello-world-composite-run-steps-action@v1\n#        uses: actions/hello-world-composite-run-steps-action@v1\n        with:\n          working-directory: 'sub-1/sub-2a'\n          who-to-greet: 'Mona the Octocats'\n      - run: echo random-number ${{ steps.foo.outputs.random-number }}\n      - name: Terraform Plan\n        id: plan\n        if: github.event_name == 'pull_request'\n        run: terraform plan -no-color -input=false\n        working-directory: 'sub-1/sub-2a'\n        continue-on-error: true\n      - uses: actions/github-script@0.9.0\n        if: github.event_name == 'pull_request'\n        env:\n          PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          script: |\n            const output = `#### Terraform Format and Style üñå\\`${{ steps.fmt.outcome }}\\`\n            #### Terraform Initialization ‚öôÔ∏è\\`${{ steps.init.outcome }}\\`\n            #### Terraform Validation ü§ñ\\`${{ steps.validate.outcome }}\\`\n            #### Terraform Plan üìñ\\`${{ steps.plan.outcome }}\\`\n\n            \u003cdetails\u003e\u003csummary\u003eShow Plan\u003c/summary\u003e\n\n            \\`\\`\\`\\n\n            ${process.env.PLAN}\n            \\`\\`\\`\n\n            \u003c/details\u003e\n\n            *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n            github.issues.createComment({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              body: output\n            })\n      - name: Terraform Plan Status\n        if: steps.plan.outcome == 'failure'\n        run: exit 1\n      - name: Terraform Apply\n        if: github.ref == 'refs/heads/main' \u0026\u0026 github.event_name == 'push'\n        run: terraform apply -auto-approve -input=false\n        working-directory: 'sub-1/sub-2a'\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../.github/workflows/sub-2a.yml",
            "id": "b6d52d64c7f6970370baaf962f1f039777ea01bd",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        },
        {
          "index_key": "sub-2b",
          "schema_version": 0,
          "attributes": {
            "content": "on:\n  push:\n    branches:\n      - main\n    paths:\n      - 'sub-1/sub-2b/*'\n  pull_request:\n    paths:\n      - 'sub-1/sub-2b/*'\n\ndefaults:\n  run:\n    shell: bash\n\njobs:\n  hello_world_job:\n    runs-on: ubuntu-latest\n    name: Terraform Plan Apply\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v2\n      - name: Install and Setup Terraform\n        uses: hashicorp/setup-terraform@v1\n        with:\n          terraform_version: 0.14.0\n          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}\n      - name: Terraform Format Init Validate\n        id: foo\n        uses: ./.github/actions/terraform-workflow # actions/hello-world-composite-run-steps-action@v1\n#        uses: actions/hello-world-composite-run-steps-action@v1\n        with:\n          working-directory: 'sub-1/sub-2b'\n          who-to-greet: 'Mona the Octocats'\n      - run: echo random-number ${{ steps.foo.outputs.random-number }}\n      - name: Terraform Plan\n        id: plan\n        if: github.event_name == 'pull_request'\n        run: terraform plan -no-color -input=false\n        working-directory: 'sub-1/sub-2b'\n        continue-on-error: true\n      - uses: actions/github-script@0.9.0\n        if: github.event_name == 'pull_request'\n        env:\n          PLAN: \"terraform\\n${{ steps.plan.outputs.stdout }}\"\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n          script: |\n            const output = `#### Terraform Format and Style üñå\\`${{ steps.fmt.outcome }}\\`\n            #### Terraform Initialization ‚öôÔ∏è\\`${{ steps.init.outcome }}\\`\n            #### Terraform Validation ü§ñ\\`${{ steps.validate.outcome }}\\`\n            #### Terraform Plan üìñ\\`${{ steps.plan.outcome }}\\`\n\n            \u003cdetails\u003e\u003csummary\u003eShow Plan\u003c/summary\u003e\n\n            \\`\\`\\`\\n\n            ${process.env.PLAN}\n            \\`\\`\\`\n\n            \u003c/details\u003e\n\n            *Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\n            github.issues.createComment({\n              issue_number: context.issue.number,\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              body: output\n            })\n      - name: Terraform Plan Status\n        if: steps.plan.outcome == 'failure'\n        run: exit 1\n      - name: Terraform Apply\n        if: github.ref == 'refs/heads/main' \u0026\u0026 github.event_name == 'push'\n        run: terraform apply -auto-approve -input=false\n        working-directory: 'sub-1/sub-2b'\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "../.github/workflows/sub-2b.yml",
            "id": "f3315fbca1243c4ee34bab6dd3a4fab59cec2407",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
